<?php

namespace FrontendBundle\Repository;

use Doctrine\ORM\EntityManagerInterface;
use Doctrine\Common\Persistence\ManagerRegistry;
use Doctrine\DBAL\DriverManager;

/**
 * PlanningRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlanningRepository extends \Doctrine\ORM\EntityRepository {

    /**
     * Recuperation d'un code formation
     */
    public function getPlanningFormation($numlien, $em) {
        $sql = 'SELECT p.formationCode 
                FROM FrontendBundle:Planning p
                WHERE p.stagiaireEntrepriseNumlien = ' . $numlien;

        $query = $em->createQuery($sql);

        return $query->getResult();
    }

    /**
     * Recuperation d'un planning
     */
    public function getPlanningStagiaires($formation, $em) {
        $sql = "SELECT distinct p.stagiaireEntrepriseNumlien 
                FROM FrontendBundle:Planning p
                WHERE p.formationCode = '" . $formation . "'";

        $query = $em->createQuery($sql);

        return $query->getResult();
    }

    /**
     * Recuperation d'un planning avec son detail
     */
    public function getPlanningFormationDetail($numlien, $em) {
        $sql = 'SELECT p.idPlanning, p.dateDebut, p.dateFin, p.formationCode, p.etat, p.nom
                FROM FrontendBundle:Planning p
                WHERE p.stagiaireEntrepriseNumlien = ' . $numlien;

        $query = $em->createQuery($sql);

        return $query->getResult();
    }

    /**
     * Insertion d'un planning
     */
    public function insertPlanning($planning, $em) {
        $em->persist($planning);
        $em->flush();

        return $planning;
    }

    /**
     * Recherche d'un planning par date
     */
    public function rechercherPlanningDates($search, $em) {
        $sql = 'SELECT p.idPlanning,p.dateDebut, p.dateFin, p.formationCode, p.etat, p.stagiaireEntrepriseNumlien
                FROM FrontendBundle:Planning p
                WHERE ';

        switch ($search["date_status"]) {
            case 1:
                $sql .= " p.dateDebut  >  '" . $search["date_debut"] . "'";
                break;
            case 2:
                $sql .= " p.dateDebut < '" . $search["date_fin"] . "'";
                break;
            case 3:
                $sql .= " p.dateDebut BETWEEN '" . $search["date_debut"] . "' AND '" . $search["date_fin"] . "'";
                break;
        }


        $sql .= ' ORDER BY p.dateDebut DESC';

        $query = $em->createQuery($sql);

        return $query->getResult();
    }

    /**
     * Recherche d'un planning par date
     */
    public function rechercherPlanningDatesFormation($search, $em) {
        $sql = 'SELECT p.dateDebut, p.dateFin, p.formationCode, p.etat, p.stagiaireEntrepriseNumlien
                FROM FrontendBundle:Planning p
                WHERE ';

        switch ($search["date_status"]) {
            case 1:
                $sql .= " p.dateDebut  >  '" . $search["date_debut"] . "'";
                break;
            case 2:
                $sql .= " p.dateDebut < '" . $search["date_fin"] . "'";
                break;
            case 3:
                $sql .= " p.dateDebut BETWEEN '" . $search["date_debut"] . "' AND '" . $search["date_fin"] . "'";
                break;
        }

        $sql .= " AND p.formationCode = '" . $search["formation"] . "'";

        $sql .= ' ORDER BY p.dateDebut DESC';

        $query = $em->createQuery($sql);
        return $query->getResult();
    }

    /**
     * Modification du statut d'un planning
     */
    public function modifierPlanningStatus($planning, $em) {
        $em->persist($planning);
        $em->flush();

        return $planning;
    }

    /**
     * Recherche d'un planning par id
     */
    public function getPlanningByLien($id, $em) {
        $repository = $em->getRepository('FrontendBundle:Planning');
        $planning_temp = $repository->findBy(array('idPlanning' => $id));

        return $planning_temp;
    }

    /**
     * Recherche d'un planning par id
     */
    public function getPlanningNumLienById($id, $em) {
        $sql = "SELECT p.stagiaireEntrepriseNumlien 
                FROM FrontendBundle:Planning p
                WHERE p.idPlanning = '" . $id . "'";

        $query = $em->createQuery($sql);

        return $query->getResult();
    }

    /**
     * Recherche d'un planning par id
     */
    public function getPlannings($em) {
        $sql = 'SELECT p.idPlanning 
                FROM FrontendBundle:Planning p';

        $query = $em->createQuery($sql);

        return $query->getResult();
    }

    /**
     * Recherche d'un planning par id
     */
    public function getPlanningStagiaireById($id, $em) {
        $sql = "SELECT p.stagiaireCode, p.formationCode 
                FROM FrontendBundle:Planning p
                WHERE p.idPlanning = '" . $id . "'";

        $query = $em->createQuery($sql);

        return $query->getResult();
    }

    public function getPlanningMaxIdByStagiaire($stagiaire, $formation, $em) {

        $sql = "SELECT max(p.idPlanning)
                FROM FrontendBundle:Planning p
                WHERE p.stagiaireCode = " . $stagiaire . " and p.formationCode='$formation'";

        $query = $em->createQuery($sql);

        return $query->getResult();
    }

}
